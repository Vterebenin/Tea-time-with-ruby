=begin
Общая идея алгоритма состоит в следующем:

Выбрать из массива элемент, называемый опорным. Это может быть любой из 
элементов массива. От выбора опорного элемента не зависит корректность 
алгоритма, но в отдельных случаях может сильно зависеть его эффективность.
Сравнить все остальные элементы с опорным и переставить их в массиве так, чтобы 
разбить массив на три непрерывных отрезка, следующие друг за другом: «меньшие 
опорного», «равные» и «большие».
Для отрезков «меньших» и «больших» значений выполнить рекурсивно ту же 
последовательность операций, если длина отрезка больше единицы.
На практике массив обычно делят не на три, а на две части: например, «меньшие 
опорного» и «равные и большие»; такой подход в общем случае эффективнее, так 
как упрощает алгоритм разделения.
=end



def quicksort(list)
   return list if list.length <= 1
   pivot = list.shift
   left, right = list.partition { |el| el < pivot }
   quicksort(left) + [pivot] + quicksort(right)
end

t = Time.now
p quicksort([1,4,3,2,4,7,8,9,243,1,13,3,])
p Time.now - t